{"ast":null,"code":"var _jsxFileName = \"/Users/uzytkownik/Desktop/React Applications/15.ClothingStore/ClotingStoreRedux/src/components/CartDropdown.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from './CustomButton';\nimport CartItem from './CartItem';\nimport { selectCartItems } from './../redux/selector/cart-selector';\nimport { toggleCartHidden } from '../redux/action/cart-actions';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/uzytkownik/Desktop/React Applications/15.ClothingStore/ClotingStoreRedux/src/components/CartDropdown.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,GAKO;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANZ,CADJ,EAUI,oBAAC,YAAD;AACI,EAAA,OAAO,EAAE,MAAM;AACXJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADJ;;AAsBA,MAAMU,eAAe,GAAGf,wBAAwB,CAAC;AAC7CO,EAAAA,SAAS,EAAEH;AADkC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CustomButton from './CustomButton';\r\nimport CartItem from './CartItem';\r\n\r\nimport { selectCartItems } from './../redux/selector/cart-selector';\r\nimport { toggleCartHidden } from '../redux/action/cart-actions';\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n    <div className='cart-dropdown'>\r\n        <div className='cart-items'>\r\n            {cartItems.length ? (\r\n                cartItems.map(cartItem => (\r\n                    <CartItem key={cartItem.id} item={cartItem} />\r\n                ))\r\n            ) : (\r\n                    <span className='empty-message'>Your cart is empty</span>\r\n                )}\r\n        </div>\r\n        <CustomButton\r\n            onClick={() => {\r\n                history.push('/checkout');\r\n                dispatch(toggleCartHidden());\r\n            }}\r\n        >\r\n            GO TO CHECKOUT\r\n      </CustomButton>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}