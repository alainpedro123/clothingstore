{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aafonso\\\\Desktop\\\\E-commerce\\\\cloting-store - redux\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport Shop from './pages/Shop';\nimport SignInSignUp from './pages/SignIn-SignUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase-utils';\nimport { setCurrentUser } from './redux/user/user-action';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // Storing User Data In Our App\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n  /* Storing User Data In Firebase\r\n      componentDidMount() {\r\n          this.unsubscribeFromAuth = auth.onAuthStateChanged(async user => {\r\n              createUserProfileDocument(user);\r\n          });\r\n      }\r\n  */\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: Shop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : React.createElement(SignInSignUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/aafonso/Desktop/E-commerce/cloting-store - redux/src/App.jsx"],"names":["React","Component","Switch","Route","Redirect","connect","Header","HomePage","Shop","SignInSignUp","auth","createUserProfileDocument","setCurrentUser","App","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBa,mBAFwB,GAEF,IAFE;AAAA;;AAIxB;AACAC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEH,MAAAA;AAAF,QAAqB,KAAKI,KAAhC;AACA,SAAKF,mBAAL,GAA2BJ,IAAI,CAACO,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACjE,UAAIA,QAAJ,EAAc;AACV,cAAMC,OAAO,GAAG,MAAMR,yBAAyB,CAACO,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC3BT,UAAAA,cAAc,CAAC;AAAEU,YAAAA,EAAE,EAAED,QAAQ,CAACC,EAAf;AAAmB,eAAGD,QAAQ,CAACE,IAAT;AAAtB,WAAD,CAAd;AACH,SAFD;AAGH;;AAEDX,MAAAA,cAAc,CAACM,QAAD,CAAd;AACH,KAV0B,CAA3B;AAWH;AAED;;;;;;;;;AAOAM,EAAAA,oBAAoB,GAAG;AACnB,SAAKV,mBAAL;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAElB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,MAAM,EAAE,MAAM,KAAKQ,KAAL,CAAWU,WAAX,GAChC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADgC,GAEhC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,CADJ;AAaH;;AA7CuB;;AAgD5B,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACnCF,EAAAA,WAAW,EAAEE,IAAI,CAACF;AADiB,CAAf,CAAxB;;AAIA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,cAAc,EAAEgB,IAAI,IAAIE,QAAQ,CAAClB,cAAc,CAACgB,IAAD,CAAf;AADI,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from './components/Header';\r\nimport HomePage from './pages/HomePage';\r\nimport Shop from './pages/Shop';\r\nimport SignInSignUp from './pages/SignIn-SignUp';\r\nimport { auth, createUserProfileDocument } from './firebase/firebase-utils';\r\nimport { setCurrentUser } from './redux/user/user-action';\r\n\r\nclass App extends Component {\r\n\r\n    unsubscribeFromAuth = null;\r\n\r\n    // Storing User Data In Our App\r\n    componentDidMount() {\r\n        const { setCurrentUser } = this.props;\r\n        this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n            if (userAuth) {\r\n                const userRef = await createUserProfileDocument(userAuth);\r\n\r\n                userRef.onSnapshot(snapShot => {\r\n                    setCurrentUser({ id: snapShot.id, ...snapShot.data() });\r\n                });\r\n            }\r\n\r\n            setCurrentUser(userAuth);\r\n        });\r\n    }\r\n\r\n    /* Storing User Data In Firebase\r\n        componentDidMount() {\r\n            this.unsubscribeFromAuth = auth.onAuthStateChanged(async user => {\r\n                createUserProfileDocument(user);\r\n            });\r\n        }\r\n    */\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path='/' component={HomePage} />\r\n                    <Route path='/shop' component={Shop} />\r\n                    <Route path='/signin' render={() => this.props.currentUser ? (\r\n                        <Redirect to='/' />\r\n                    ) : <SignInSignUp />}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    currentUser: user.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}